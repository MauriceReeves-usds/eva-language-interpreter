/**
 * S-expression parser.
 * 
 * Atom: 42, foo, bar, "Hello World"
 *
 * List: (), (+ 5 x), (print "hello world")
 */

// --------------------------------------------
// lexical grammar

%lex

%%

\s+                 /* skip whitespace */

\"[^\"]*\"             return 'STRING'

[-]?\d+\.+\d+       return 'NUMBER'
[-]?\d+             return 'NUMBER'

[\w+\-*=<>!/]+       return 'SYMBOL'

/lex

// --------------------------------------------
// syntactic grammar

%%

Exp
  : Atom
  | List
  ;

Atom
  : NUMBER  { $$ = Number($1) }
  | STRING
  | SYMBOL
  ;

List
  : '(' ListEntries ')' { $$ = $2 }
  ;

ListEntries
  : ListEntries Exp     { $1.push($2); $$ = $1 }
  | /* empty */         { $$ = [] }
  ;

